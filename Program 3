import tkinter as tk
from tkinter import messagebox

# Function to calculate the charge based on the selected rate category and number of minutes
def calculate_charge():
    try:
        # Get the selected rate category and minutes
        minutes = float(minutes_entry.get())
        rate_category = rate_var.get()
        
        if rate_category == "Daytime":
            rate = 0.02
        elif rate_category == "Evening":
            rate = 0.12
        elif rate_category == "Off-Peak":
            rate = 0.05
        else:
            messagebox.showerror("Input Error", "Please select a rate category.")
            return
        
        # Calculate the total charge
        charge = rate * minutes
        
        # Display the charge in a dialog box
        messagebox.showinfo("Total Charge", f"Total Charge: ${charge:.2f}")
    
    except ValueError:
        messagebox.showerror("Input Error", "Please enter a valid number for minutes.")

# Create the main window
root = tk.Tk()
root.title("Long-Distance Call Charges")

# Create a label for instructions
instructions_label = tk.Label(root, text="Enter the number of minutes and select the rate category:")
instructions_label.pack(padx=20, pady=10)

# Entry widget for the number of minutes
minutes_label = tk.Label(root, text="Minutes of Call:")
minutes_label.pack(padx=10, pady=5)

minutes_entry = tk.Entry(root)
minutes_entry.pack(padx=20, pady=5)

# Create a label for the rate category selection
rate_label = tk.Label(root, text="Select Rate Category:")
rate_label.pack(padx=10, pady=5)

# Radio buttons for the rate categories
rate_var = tk.StringVar()
rate_var.set("Daytime")  # Default selection

daytime_rb = tk.Radiobutton(root, text="Daytime (6:00 A.M. - 5:59 P.M.)", variable=rate_var, value="Daytime")
daytime_rb.pack(anchor='w')

evening_rb = tk.Radiobutton(root, text="Evening (6:00 P.M. - 11:59 P.M.)", variable=rate_var, value="Evening")
evening_rb.pack(anchor='w')

off_peak_rb = tk.Radiobutton(root, text="Off-Peak (Midnight - 5:59 A.M.)", variable=rate_var, value="Off-Peak")
off_peak_rb.pack(anchor='w')

# Calculate button
calculate_button = tk.Button(root, text="Calculate Charge", command=calculate_charge)
calculate_button.pack(pady=20)

# Run the application
root.mainloop()
